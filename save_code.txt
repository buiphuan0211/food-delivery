
//s3bucketName := os.Getenv("S3BucketName")
//s3Region := os.Getenv("S3Region")
//s3APIkey := os.Getenv("S3APIKey")
//s3SecretKey := os.Getenv("S3SecretKey")
//s3Domain := os.Getenv("S3Domain")

//// Detail
//restaurantGroup.GET("/:id", func(c *gin.Context) {
//	id, err := strconv.Atoi(c.Param("id"))
//	if err != nil {
//		c.JSON(http.StatusBadRequest, gin.H{
//			"error": err,
//		})
//	}
//
//	var data Restaurant
//	db.Where("id = ?", id).First(&data)
//
//	c.JSON(http.StatusOK, gin.H{
//		"data": data,
//	})
//})
//

//	// Set default pagination
//	if pageData.Page == 0 {
//		pageData.Page = 1
//	}
//	if pageData.Limit == 0 {
//		pageData.Limit = 5
//	}
//
//	offset := (pageData.Page - 1) * pageData.Limit
//
//	db.Offset(offset).Order("id desc").Limit(pageData.Limit).Find(&data)
//	c.JSON(http.StatusOK, gin.H{
//		"list": data,
//	})
//})
//
//// Update ...
//restaurantGroup.PATCH("/:id", func(c *gin.Context) {
//	id, err := strconv.Atoi(c.Param("id"))
//	if err != nil {
//		c.JSON(http.StatusBadRequest, gin.H{
//			"error": err.Error(),
//		})
//		return
//	}
//
//	var payload RestaurantUpdate
//	if err := c.ShouldBind(&payload); err != nil {
//		c.JSON(http.StatusBadRequest, gin.H{
//			"error": err.Error(),
//		})
//		return
//	}
//
//	if err := db.Where("id = ?", id).Updates(&payload); err != nil {
//		c.JSON(http.StatusBadRequest, gin.H{
//			"error": err,
//		})
//		return
//	}
//	c.JSON(http.StatusOK, gin.H{
//		"data": "success",
//	})
//})
//
